#+title: Haskell Maze Generator

[[file:example_images/hunt_and_kill.svg][hunt_and_kill.svg]]

Generate mazes using different algorithms in Haskell. Examples can be found in the [[file:example_images/][examples directory]].


*** Ideas to improve
- Could I use the state of the maze during generation in a different way to the state during the solve? It seems that most algorithms could use the state as the visited cells and then clear and reuse for the solve. Might make sense to create a new maze within the generate maze steps.
- Return errors. Could make the return type of generation
        ```Haskell
        Either SomeError ()
        ```
- draw from the state of the monad. This might help with the animation too
